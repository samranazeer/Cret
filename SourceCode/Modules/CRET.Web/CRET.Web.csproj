<Project Sdk="Microsoft.NET.Sdk.Web">

	<PropertyGroup>
		<TargetFramework>net6.0</TargetFramework>
		<Nullable>enable</Nullable>
		<IsPackable>false</IsPackable>
		<SpaRoot>ClientApp\</SpaRoot>
		<SpaProxyServerUrl>https://localhost:44409</SpaProxyServerUrl>
		<SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
		<ImplicitUsings>enable</ImplicitUsings>
		<Configurations>Debug;Release;Staging</Configurations>
		<UserSecretsId>c29b81ca-90e7-424c-b39c-355b7622a767</UserSecretsId>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="AutoMapper" Version="12.0.1" />
		<PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="12.0.1" />
		<PackageReference Include="Microsoft.AspNetCore.SpaProxy">
			<Version>6.*-*</Version>
		</PackageReference>
		<PackageReference Include="Microsoft.EntityFrameworkCore" Version="6.0.25" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="6.0.25">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="6.0.25" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="6.0.25">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.Identity.Web" Version="1.23.0" />
		<PackageReference Include="NLog.Web.AspNetCore" Version="5.3.5" />
		<PackageReference Include="Swashbuckle.AspNetCore" Version="6.5.0" />
		<PackageReference Include="System.Linq.Dynamic.Core" Version="1.3.7" />
	</ItemGroup>

	<ItemGroup>
		<RuntimeHostConfigurationOption Include="System.Drawing.EnableUnixSupport" Value="true" />
	</ItemGroup>

	<ItemGroup>
		<!-- Don't publish the SPA source files, but do show them in the project files list -->
		<Content Remove="$(SpaRoot)**" />
		<None Remove="$(SpaRoot)**" />
		<None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
	</ItemGroup>

	<ItemGroup>
		<Folder Include="ClientApp\src\assets\images\" />
		<Folder Include="ClientApp\src\assets\fonts\" />
		<Folder Include="Files\" />
	</ItemGroup>

	<ItemGroup>
	  <ProjectReference Include="..\CRET.Services\CRET.Services.csproj" />
	</ItemGroup>

	<ItemGroup>
	  <None Update="Files\How to handle certificates_01.pdf">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </None>
	</ItemGroup>

	<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
		<!-- Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
	</Target>






	<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
		<!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />

		<Message Importance="high" Text="Building CRET Tool in Staging Environment..." Condition=" '$(Configuration)' == 'Staging' " />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --configuration staging" Condition=" '$(Configuration)' == 'Staging' " />

		<Message Importance="high" Text="Building CRET Tool in Production Environment..." Condition=" '$(Configuration)' == 'Release' " />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --configuration production" Condition=" '$(Configuration)' == 'Release' " />

		<!-- Include the newly-built files in the publish output -->
		<ItemGroup>
			<DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
			<ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<ExcludeFromSingleFile>true</ExcludeFromSingleFile>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>





</Project>
